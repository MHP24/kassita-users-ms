generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TicketStatus {
  PENDING
  IN_PROGRESS
  REJECTED
  SOLVED
}

enum TicketPriority {
  LOW
  MEDIUM
  HIGH
}

model TicketType {
  id   String @id @default(uuid()) @map("id")
  type String @unique @map("type")

  // * Relations
  ticket Ticket[]

  @@map("ticket_types")
}

model Ticket {
  id          String         @id @default(uuid()) @map("id")
  title       String         @map("title")
  description String         @map("description")
  response    String?        @map("response")
  images      String[]       @default([]) @map("images")
  priority    TicketPriority @default(LOW) @map("priority")
  status      TicketStatus   @default(PENDING) @map("status")
  // * Dates
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  resolvedAt  DateTime?      @map("resolved_at")

  isAvailable Boolean @default(true) @map("is_available")

  // * Relations
  typeId             String     @map("type_id")
  ticketTypeRelation TicketType @relation(fields: [typeId], references: [id])
  user               User       @relation("created_tickets", fields: [userId], references: [id])
  userId             String     @map("user_id")
  employeeId         String?    @map("employee_id")
  employee           User?      @relation("assigned_tickets", fields: [employeeId], references: [id])

  @@index([status], name: "index_status")
  @@index([priority], name: "index_priority")
  @@index([typeId], name: "index_type_id")
  @@map("tickets")
}

// * User

enum ValidRoles {
  user
  employee
  supervisor
  admin
  super_user
}

model User {
  id        String  @id @default(uuid()) @map("id")
  username  String  @map("username")
  email     String  @unique @map("email")
  password  String  @map("password")
  apartment String? @map("apartment")

  roles     ValidRoles[] @default([user]) @map("roles")
  isActive  Boolean      @default(true) @map("is_active")
  sessionId String?      @map("session_id")

  createdAt  DateTime  @default(now()) @map("created_at")
  lastAccess DateTime? @updatedAt @map("last_access")

  // * Relations
  createdTickets  Ticket[] @relation("created_tickets")
  assignedTickets Ticket[] @relation("assigned_tickets")

  @@index([id, email])
  @@map("users")
}
